新手教学
========

.. note::
 http://httpd.apache.org/docs/current/getting-started.html

如果你对阿帕奇 HTTP 服务器完全不熟悉，或者对如何运行网站完全不了解，你可能不知道从哪开始，或者如何提问。
这篇文档会教你一些基础知识。

客户端，服务器和 URL
--------------------

网络地址是用 URL 标识的（统一资源标识），它包括协议（如 ``http``），服务器名（如 ``www.apache.org``），URL 路径（如 ``/docs/current/getting-started.html``）。
除此之外还可能有查询字符串（如 ``?arg=value``）。

客户端（如网页浏览器）通过特定协议和 URL 路径对资源发起请求，连接到服务器（如你的阿帕奇服务器）。
URL 路径可以表示服务器上的很多东西。
可能是文件（如 ``getting-started.html``），解析器（如 ``server-status``）或者程序（如 ``index.php``）。
我们将在网站内容一节深入讨论这些内容。

服务器发送的响应消息中包含状态码以及可选的消息体。
状态码表明请求是否成功，如果不成功，返回什么样的错误状态。
从而告诉客户端应该如何处理服务器响应消息。
可以参考 :ref:`HTTP Server wiki<http://wiki.apache.org/httpd/CommonHTTPStatusCodes>` 查看可能的状态码定义。

网络事物的详情和错误条件都会写入到日志文件中。
在后续章节 :ref:`日志文件和排除故障<log_trouble>` 中会进行详细介绍。

主机名和域名服务器
------------------

为连接到服务器，客户端首先需要解决的问题是将服务器名映射到 IP 地址。
IP 地址表示服务器在因特网上所处的位置。
因此，为了能让你的服务器可到达，需要将服务器名放在 DNS 中。

.. note:: 域名服务器和 Windows 操作系统 "C:\Windows\System32\drivers\etc\" 下的 hosts 文件功能一致。
 都是将服务器名映射为 IP 地址。

如果你不知道怎么做的话，你可以联系你的网络管理员或者网络服务供应商（ISP），帮你完成这一步。
多个主机名可以指向同一个 IP 地址；多个 IP 地址可以关联到同一个物理服务器。
因此通过阿帕奇的“虚拟主机”特性，你可以在同一台物理服务器上开启多个网站。

如果你要测试一个不可到达的服务器，你可以将主机名放到 hosts 文件中，完成本地测试。
例如，你可以在 hosts 文件写入一条记录，将 ``www.example.com`` 请求映射到本地系统，用于测试。
记录项为：

``127.0.0.1 www.example.com``

hosts 文件的路径一般是 ``/etc/hosts`` 或者 ``C:\Windows\System32\drivers\etc\hosts``。

配置文件和指令
--------------
  
阿帕奇 HTTP 服务器通过文本文件进行配置。 配置文件可以放在服务器的任意地方，取决于阿帕奇的安装方法。 这些文件的常用位置可以参考 :ref:`in
the httpd wiki<http://wiki.apache.org/httpd/DistrosDefaultLayout>`。 如果 httpd
是通过源代码编译安装的，则配置文件的默认位置是 ``/usr/local/apache2/conf/httpd.conf``。
默认的配置文件名通常是 ``httpd.conf``。
第三方发布的版本对应的配置文件名各不相同（比如 nginx 的配置文件为 ``nginx.conf``）。

为了更便于管理，将配置文件分解为多个小文件。
这些文件通过 Include 指令加载，可能每次安装都不同。
合理归档和划分这些文件，使得结构对你意义更明晰。
如果默认的文件归档对你而言毫无意义，你可以随时进行重新规划。

在配置文件中使用配置指令对服务器进行设置。
指令由一个关键字和一个或者多个参数构成。
问题 “我应该在哪设置那些指令？” 的另一层表述是在哪设置一条指令会生效。
如果是全局设置，则指令应该出现在配置文件中，在节点之外(Directory, Location, VirtualHost等)。
如果仅是作用于某个目录，则指令应该放到 Directory 节点中，并指向该目录。
具体内容可以参考 :ref:`<sections>`。

除了主配置文件，某些指令可以出现在 .htacess 文件中。
这些文件处于内容目录中。
.htacess 文件主要面向那些没有权限访问主服务器配置文件的用户。

网站内容
--------

网页内容可以采取多种不同的格式，但是主要分为静态内容和动态内容。
静态内容像 HTML 文件，图片文件，CSS 文件以及其他处于文件系统中的文件等。
**DocumentRoot** 指定了这些文件应该放置的位置。
该指令既可以做全局设定，也可以在每个虚拟主机中设置，由你来决定。

一般地，如果请求某个目录，不是文件，则服务器返回目录下的 **index.html** 文件。
例如，DocumentRoot 指向 ``/var/www/html``，请求是 ``http://www.example.com/work/``，
则服务器返回 ``/var/www/html/work/index.html`` 文件给客户端。

动态内容是收到请求时才产生的内容，且每个请求都不一样。
产生动态内容有多种方法，而且需要用到不同的解析器。
你可以用 CGI 脚本产生网页的动态内容。

第三方的模块，如 **mod_php** 可以编写代码来完成各种工作。
许多三方的应用，用不同的语言和工具编写，可以下载并安装到阿帕奇 HTTP 服务器上。
对三方应用的支持已经超出了本文档的范畴。
感兴趣的话，可以搜索相关文档或者到其它的支持论坛上搜索答案。

.. _log_trouble:

日志文件和排除故障
------------------

作为阿帕奇 HTTP 服务器管理员，最重要的是日志文件和错误日志文件。
在没有错误日志的情况下，排除故障等于是“盲人瞎马”。

错误日志文件的位置由 ``ErrorLog`` 指令指定，可以全局设定，也可以在每个主机中设定。
错误日志中的每项告诉你错误类型，错误发生的时间，以及如何修改错误的提示信息。
每个错误日志消息包含一个错误码，在网上可以搜索该错误码更为详细的描述以及解决问题的方法。
你也可以配置错误日志，使日志包含一个 ID，通过它可以链接到某个日志项。
从而决定什么请求导致该错误条件。
