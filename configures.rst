配置文件
========

本章讲解阿帕奇 HTTP 服务器的配置文件

主配置文件
----------

相关模块：``mod_mime``
相关指令：``<IfDefine>``, Include, TypesConfig

阿帕奇 HTTP 服务器通过一个文本的配置文件（主配置文件）中的指令设置。
主配置文件一般是 ``http.conf``，其文件位置在编译的时候指定，不过该位置可以通过 ``httpd`` 的 ``-f`` 选项修改。
除了主配置文件，还可以有其他配置文件，需要通过 ``Include`` 指令加载到主配置文件中；
可以使用通配符加载这些配置文件。
所有指令都可以在任何一个配置文件中使用。
对主配置文件的修改只在服务器启动或者重启时才会生效（通过 ``httpd`` 指令进行启动或重启）。

服务器除了需要主配置文件，还需要一个涵盖了 mime 类型的文件；
该文件名由指令 ``TypesConfig`` 指定，默认情况下为 ``mime.types``。

配置文件的语法
--------------

``httpd`` 配置文件的格式是：一行一个指令。
一个指令过长，可以通过反斜杠 ``/`` 另起一行。
反斜杠后面不能有任何空白字符。

传送给指令的参数用空格隔开。
如果一个参数内含有空格，则必须将参数用双引号引起来。

配置文件中的指令不区分大小写，而传递给指令的参数一般是区分大小写的。
以 ``#`` 开始的行是注释，会被忽略。
注释不能和配置指令处于同一行。
指令前面的空白符会被忽略，所以处于结构清晰的考虑，可以对指令行进行锁紧。
空行同样会被忽略。

由指令 ``Define`` 定义的变量或者希尔环境变量可以通过语法 ``${VAR}`` 取值，并在配置文件中使用。
如果 ``"VAR"`` 是有效变量名，该变量的值会代替它在配置文件行中的位置，处理时会当成直接出现在配置文件中一样。
指令 ``Define`` 定义的变量优先于环境变量。
如果 ``"VAR"`` 没有找到定义，则字符串 ``${VAR}`` 会保留下来，日志中会记录一个警告。
变量名不能有 ``.`` 字符，避免与 ``RewriteMap`` 语法产生冲突。

服务器启动之前，只有希尔环境变量可以用于扩展。
配置文件中的指令定义的环境变量，如 ``SetEnv``，由于生效的时机太晚，因而无法用于配置文件的扩展。

正常情况下，用变量值替换所有变量同时拼接所有连续行之后，配置文件的一行最大长度近似为 16 MB。
在 ``.htacess`` 文件，最大长度为 8190 个字符。

在启动服务器之前，可以使用指令 ``apchechectl configtest`` 或者 ``httpd`` 的 ``-t`` 选项来检验配置文件是否有语法错误，

可以使用 ``mod_info`` 的 ``-DDUMP_CONFIG`` 选项导出配置文件内容，包括所有包含文件，涉及到的环境变量，所有注释信息；
如果节点 ``<IfDefine>`` 或 ``<IfModule>`` 不配对，则会被删除。
然而输出结果不会对重复出现的指令做合并或者覆盖。

模块
----

相关模块：``mod_so``
相关指令：``<IfModule>``，``LoadModule``

``httpd`` 是基于模块的服务器。
这说明核心服务器只具有最基本的功能。
扩展功能通过模块加载体现。
默认情况下，基本模块是在服务器编译的时候加载的。
如果在编译服务器时，使用了动态加载模块，则这些动态模块可以单独编译，并通过指令 ``LoadModule`` 在任意时刻加载。
否则，``httpd`` 只能重新编译，才可以添加或者删除模块。
处于 ``<IfModule>`` 节点中的配置指令是否加载，取决于某个模块是否存在。
然而 ``<IfModule>`` 不是必需的，在某些情况下，可以标注出缺失的重要模块。

可以使用 ``httpd`` 的 ``-l`` 选项查看哪些模块已经编译进服务器。
可以使用 ``-M`` 指令查看哪些模块已经动态载入了。

指令作用域
----------

相关指令：``<Directory>``,``<DirectoryMatch>``,``<Files>``,``<FilesMatch>``,``<Location>``, ``<LocationMatch>``, ``<VirtualHost>``

主配置文件中的指令会作用于整个服务器。
如果你只想让配置只对服务器的某个部分生效，可以限定指令的作用范围；
将指令放在 ``<Directory>``,``<DirectoryMatch>``,``<Files>``,``<FilesMatch>``,``<Location>``, ``<LoactionMatch>`` 节点中即可。
这些节点将指令的应用局限于特定的文件系统位置上或者 URL 上。
它们可以相互嵌套，允许非常精细粒度的配置。

``httpd`` 可以同时启用多个网址。
这就是所谓的虚拟主机。
指令也可以放在 ``<VirtualHost>`` 中，它们仅作用于特定网址的请求上。

尽管绝大多数指令可以放在任意一个节点中，某些指令只有在特定场景中起作用。
例如，控制进程产生的指令只能放在 :ref:`<main_server_configure>` 中。

可以查看 ``Context`` 确定指令可以放在哪些节点中。

``.htacess`` 文件
-----------------

相关指令：``AccessFileName``,``AllowOverride``

``httpd`` 通过网站树中的特定文件对配置信息进行集中管理。
特定文件通常称为 ``.htacess`` 文件，不过文件名可以通过指令 ``AccessFileName`` 修改。
``.htacess`` 文件中的指令应用于文件所在的目录及该目录下的所有子目录。
``.htacess`` 文件和主配置文件具有相同的语法。
由于 ``.htacess`` 文件在每个请求到来时，都会读取依次，所以对文件内容的修改会立刻生效。

可以查看 ``Context`` 确定哪些指令可以放在 ``.htacess`` 文件中。
在主配置文件中，利用 ``AllowOverride`` 指令允许服务器管理员进一步控制什么指令可以放在 ``.htacess`` 文件中。